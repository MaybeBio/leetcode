1，使用递归构建逆序，再判断：
class Solution(object):
    def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        # 很典型的使用递归的算法，就是首先递归构建逆序数字表示，然后再和原来的数字比较是否相等
        # 递归的写法需要注意2点：
        
        def back_order(x):
            # 1，首先判断递归终止条件（什么时候不调用递归函数，即什么时候终止）
            if(x>0):
            # 2，不终止就继续展开递归（也就是调用自身，但是要体现出“展开”的思维，实际上就是将原问题化为和原问题形式相似但规模更小得问题，也就是分解）
                print(x%10 , end="") #先对各位逆序先打印输出,若希望多个 print() 的输出内容显示在同一行，需将 end 设置为空字符串 ''
                back_order(x//10) #这里使用地板除，结果向下取整
        
        if x == back_order(x):
            return True
        else:
            return False

——》暂时会报错 
